{"version":3,"sources":["config/fbConfig.js","Components/Auth/SignIn.js","Components/Auth/SignOut.js","Components/Layout/SignedInLinks.js","Components/Layout/Navbar.js","Components/Dashboard/Notifications.js","Components/Farm/FarmSummary.js","Components/Farm/FarmList.js","Components/Dashboard/Dashboard.js","Components/Farm/FarmDetails.js","Components/Auth/SignUp.js","Components/Farm/NewFarm.js","Store/Actions/FarmActions.js","Components/Camp/NewCamp.js","App.js","serviceWorker.js","Store/Reducers/AuthReducer.js","Store/Reducers/FarmReducer.js","Store/Reducers/RootReducer.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","SignIn","auth","firestore","state","email","password","signInWithGoogle","provider","GoogleAuthProvider","props","signInWithPopup","then","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","console","log","className","onClick","this","Component","SignOut","signOutWithGoogle","signOut","currentUser","SignedInLinks","to","Navbar","useAuthState","user","Notification","message","notificationMessage","sentat","uid","photourl","Notifications","notificationRef","store","collection","query","limit","useCollectionData","idField","notifications","useState","formValue","setFormValue","sendNotification","a","photoURL","add","SentAt","FieldValue","serverTimestamp","map","msg","key","onSubmit","onChange","type","FarmSummary","farm","title","company","FarmList","farms","Dashboard","userfarms","connect","farmRedux","FarmDetails","match","params","SignUp","firstname","lastname","htmlFor","NewFarm","description","geolocation","createFarm","dispatch","getState","getFirestore","fireStore","farmFounderFirstName","farmFounderLastName","farmFoundedOn","Date","farmData","catch","error","errorData","NewCamp","identifier","animaltype","additional","App","exact","path","component","Boolean","window","location","hostname","initState","authReducer","farmReducer","action","rootReducer","combineReducers","firebaseReducer","firestoreReducer","authRedux","createStore","rrfProps","config","fbConfig","createFirestoreInstance","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4TAoBEA,IAASC,cAXK,CACZC,OAAQ,0CACRC,WAAY,+BACZC,YAAa,sCACbC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKFT,QAAf,E,gBCmCaU,GA3CFV,IAASW,OACJX,IAASY,Y,4MAGvBC,MAAQ,CACJC,MAAO,GACPC,SAAU,I,EAMdC,iBAAmB,WAEf,IAAMC,EAAW,IAAIjB,IAASW,KAAKO,mBACnC,EAAKC,MAAMR,KAAKS,gBAAgBH,GAAUI,MAAK,gB,EAKnDC,aAAe,SAACC,GAEZ,EAAKC,SAAL,eACKD,EAAEE,OAAOC,GAAMH,EAAEE,OAAOE,S,EAIjCC,aAAe,SAACL,GAEZA,EAAEM,iBACFC,QAAQC,IAAI,EAAKlB,OACjB,EAAKG,oB,uDAIL,OACI,yBAAKgB,UAAU,aACX,4BAAQC,QAASC,KAAKlB,iBAAkBgB,UAAU,gCAAlD,gB,GAlCKG,cCgCNC,GAnCFpC,IAASW,OACJX,IAASY,Y,4MAOvByB,kBAAoB,WAChB,EAAKlB,MAAMR,KAAK2B,W,EAGpBhB,aAAe,SAACC,GAEZ,EAAKC,SAAL,eACKD,EAAEE,OAAOC,GAAMH,EAAEE,OAAOE,S,EAIjCC,aAAe,SAACL,GAEZA,EAAEM,iBACFC,QAAQC,IAAI,EAAKlB,OACjB,EAAKG,oB,uDAIL,OAAOkB,KAAKf,MAAMR,KAAK4B,aACnB,yBAAKP,UAAU,aACX,4BAAQC,QAASC,KAAKG,kBAAmBL,UAAU,gCAAnD,iB,GA1BMG,cCAPK,EAbO,SAACrB,GAGnB,OACI,wBAAIa,UAAU,SACV,4BAAI,kBAAC,IAAD,CAASS,GAAG,YAAZ,aACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,YAAZ,aACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,cAAZ,eACJ,4BAAI,kBAAC,EAAD,CAAS9B,KAAMQ,EAAMR,UCUtB+B,EAbA,SAACvB,GACf,IAAD,EACmBwB,YAAaxB,EAAMR,MAA3BiC,EADX,oBAEI,OACI,yBAAKZ,UAAU,6BACX,yBAAKA,UAAU,aAEVY,EAAO,kBAAC,EAAD,CAAejC,KAAMQ,EAAMR,OAAU,kBAAC,EAAD,CAAQA,KAAMQ,EAAMR,U,2BC8B3EkC,EAAe,SAAC1B,GACrB,IAAD,EACyDA,EAAM2B,QAApDC,EADX,EACWA,oBADX,EACgCC,OADhC,EACwCC,IADxC,EAC6CC,SAEzC,OACI,6BACI,2BAAIH,KAKDI,EAhDO,SAAChC,GAEnB,IAAMiC,EAAkBjC,EAAMkC,MAAMC,WAAW,iBACzCC,EAAQH,EAAgBI,MAAM,IAFxC,EAG4BC,YAAkBF,EAAO,CAACG,QAAQ,OAAnDC,EAHX,sBAKsCC,mBAAS,IAL/C,mBAKWC,EALX,KAKsBC,EALtB,KAOUC,EAAgB,uCAAG,WAAMxC,GAAN,mBAAAyC,EAAA,6DAErBzC,EAAEM,iBAFmB,EAGCV,EAAMR,KAAK4B,YAA1BU,EAHc,EAGdA,IAAIgB,EAHU,EAGVA,SAHU,SAIfb,EAAgBc,IAAI,CACtBnB,oBAAqBc,EACrBM,OAAQnE,IAASY,UAAUwD,WAAWC,kBACtCpB,MAAIgB,aAPa,2CAAH,sDAgBtB,OACI,6BACI,6BACKN,GAAiBA,EAAcW,KAAI,SAAAC,GAAG,OAAI,kBAAC,EAAD,CAAcC,IAAKD,EAAI7C,GAAIoB,QAASyB,QAEnF,0BAAME,SAAUV,GACZ,2BAAOW,SAXC,SAACnD,GAEjBuC,EAAavC,EAAEE,OAAOE,UAUd,4BAAQgD,KAAK,UAAb,aCxBDC,EAdK,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAClB,OACI,yBAAK7C,UAAU,oCACX,yBAAKA,UAAU,wCACf,0BAAMA,UAAU,cACX6C,EAAKC,OAEV,uCAAaD,EAAKE,SAClB,uBAAG/C,UAAU,aAAb,wBCKGgD,EAZE,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACf,OACI,yBAAKjD,UAAU,qBACViD,GAASA,EAAMX,KAAI,SAAAO,GAChB,OACI,kBAAC,EAAD,CAAaA,KAAMA,EAAML,IAAKK,EAAKnD,U,QCOjDwD,E,uKAGE,OACI,yBAAKlD,UAAU,uBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,cACX,kBAAC,EAAD,CAAUiD,MAAO/C,KAAKf,MAAMgE,aAEhC,yBAAKnD,UAAU,wBACX,kBAAC,EAAD,CAAeqB,MAAOnB,KAAKf,MAAMkC,MAAO1C,KAAMuB,KAAKf,MAAMR,c,GAVzDwB,aAwBTiD,eANS,SAACvE,GACrB,MAAO,CACHsE,UAAWtE,EAAMwE,UAAUJ,SAIpBG,CAAyBF,GClBzBI,EAnBY,SAACnE,GAGxB,OAFAW,QAAQC,IAAIZ,GACZW,QAAQC,IAAIZ,EAAMoE,MAAMC,OAAO9D,IAE3B,yBAAKM,UAAU,kCACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,cAAhB,QAAmCb,EAAMoE,MAAMC,OAAO9D,IACtD,4dAEJ,yBAAKM,UAAU,wCACX,gDACA,iDC2CLyD,E,4MAtDX5E,MAAQ,CACJC,MAAO,GACPC,SAAU,GACV2E,UAAW,GACXC,SAAU,I,EAGdrE,aAAe,SAACC,GAEZ,EAAKC,SAAL,eACKD,EAAEE,OAAOC,GAAMH,EAAEE,OAAOE,S,EAIjCC,aAAe,SAACL,GAEZA,EAAEM,iBACFC,QAAQC,IAAI,EAAKlB,Q,uDAIjB,OACI,yBAAKmB,UAAU,aACX,0BAAMyC,SAAUvC,KAAKN,aAAcI,UAAU,SACzC,wBAAIA,UAAU,2BAAd,WAEA,yBAAKA,UAAU,eACX,2BAAO4D,QAAQ,aAAf,cACA,2BAAOjB,KAAK,OAAOjD,GAAG,YAAYgD,SAAUxC,KAAKZ,gBAGrD,yBAAKU,UAAU,eACX,2BAAO4D,QAAQ,YAAf,aACA,2BAAOjB,KAAK,OAAOjD,GAAG,WAAWgD,SAAUxC,KAAKZ,gBAGpD,yBAAKU,UAAU,eACX,2BAAO4D,QAAQ,SAAf,SACA,2BAAOjB,KAAK,QAAQjD,GAAG,QAAQgD,SAAUxC,KAAKZ,gBAGlD,yBAAKU,UAAU,eACX,2BAAO4D,QAAQ,YAAf,YACA,2BAAOjB,KAAK,WAAWjD,GAAG,WAAWgD,SAAUxC,KAAKZ,gBAExD,yBAAKU,UAAU,eACX,4BAAQA,UAAU,gCAAlB,kB,GA/CHG,a,SCEf0D,E,4MACFhF,MAAQ,CACJiE,MAAO,GACPgB,YAAa,GACbC,YAAa,GACbhB,QAAS,I,EAGbzD,aAAe,SAACC,GAEZ,EAAKC,SAAL,eACKD,EAAEE,OAAOC,GAAMH,EAAEE,OAAOE,S,EAIjCC,aAAe,SAACL,GAEZA,EAAEM,iBACF,EAAKV,MAAM6E,WAAW,EAAKnF,Q,uDAI3B,OACI,yBAAKmB,UAAU,aACX,0BAAMyC,SAAUvC,KAAKN,aAAcI,UAAU,SACzC,wBAAIA,UAAU,2BAAd,YAEA,yBAAKA,UAAU,eACX,2BAAO4D,QAAQ,SAAf,SACA,2BAAOjB,KAAK,OAAOjD,GAAG,QAAQgD,SAAUxC,KAAKZ,gBAGjD,yBAAKU,UAAU,eACX,2BAAO4D,QAAQ,eAAf,eACA,8BAAW5D,UAAU,uBAAuBN,GAAG,cAAcgD,SAAUxC,KAAKZ,gBAGhF,yBAAKU,UAAU,eACX,2BAAO4D,QAAQ,eAAf,eACA,2BAAOjB,KAAK,OAAOjD,GAAG,cAAcgD,SAAUxC,KAAKZ,gBAGvD,yBAAKU,UAAU,eACX,2BAAO4D,QAAQ,WAAf,WACA,2BAAOjB,KAAK,OAAOjD,GAAG,UAAUgD,SAAUxC,KAAKZ,gBAInD,yBAAKU,UAAU,eACX,4BAAQA,UAAU,gCAAlB,iB,GAjDFG,aA+DPiD,cAAQ,MANI,SAACa,GACxB,MAAO,CACHD,WAAY,SAACnB,GAAD,OAAUoB,EC7DJ,SAACpB,GACvB,OAAO,SAACoB,EAAUC,EAAX,GAAmD,IAA7BlG,EAA4B,EAA5BA,SAA4B,EAAlBmG,aAEjBnG,EAASoG,UAEjB9C,WAAW,SAASY,IAA9B,2BACOW,GADP,IAEIwB,qBAAsB,OACtBC,oBAAqB,OACrBC,cAAe,IAAIC,QACpBnF,MAAK,WACJ4E,EAAS,CACLtB,KAAM,cACN8B,SAAU5B,OAEf6B,OAAM,SAACC,GACNV,EAAS,CACLtB,KAAM,oBACNiC,UAAWD,QD2CYX,CAAWnB,QAInCO,CAAkCS,GETlCgB,E,4MAvDXhG,MAAQ,CACJiG,WAAY,GACZC,WAAY,GACZC,WAAY,GACZnC,KAAM,I,EAGVvD,aAAe,SAACC,GAEZ,EAAKC,SAAL,eACKD,EAAEE,OAAOC,GAAMH,EAAEE,OAAOE,S,EAIjCC,aAAe,SAACL,GAEZA,EAAEM,iBACFC,QAAQC,IAAI,EAAKlB,Q,uDAIjB,OACI,yBAAKmB,UAAU,aACX,0BAAMyC,SAAUvC,KAAKN,aAAcI,UAAU,SACzC,wBAAIA,UAAU,2BAAd,YAEA,yBAAKA,UAAU,eACX,2BAAO4D,QAAQ,cAAf,cACA,2BAAOjB,KAAK,OAAOjD,GAAG,aAAagD,SAAUxC,KAAKZ,gBAGtD,yBAAKU,UAAU,eACX,2BAAO4D,QAAQ,cAAf,eACA,2BAAOjB,KAAK,OAAOjD,GAAG,aAAagD,SAAUxC,KAAKZ,gBAGtD,yBAAKU,UAAU,eACX,2BAAO4D,QAAQ,cAAf,cACA,8BAAW5D,UAAU,uBAAuBN,GAAG,aAAagD,SAAUxC,KAAKZ,gBAG/E,yBAAKU,UAAU,eACX,2BAAO4D,QAAQ,QAAf,QACA,2BAAOjB,KAAK,OAAOjD,GAAG,OAAOgD,SAAUxC,KAAKZ,gBAGhD,yBAAKU,UAAU,eACX,4BAAQA,UAAU,gCAAlB,iB,GAhDFG,aCgBhBxB,EAAOX,IAASW,OAChBC,EAAYZ,IAASY,YAqBZqG,MAnBf,WAEE,OACE,kBAAC,IAAD,KACE,yBAAKjF,UAAU,OACb,kBAAC,EAAD,CAAQrB,KAAMA,IACd,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOuG,OAAK,EAACC,KAAK,KAAI,kBAAC,EAAD,CAAYxG,KAAMA,EAAM0C,MAAOzC,KACrD,kBAAC,IAAD,CAAOuG,KAAK,YAAYC,UAAW9B,IACnC,kBAAC,IAAD,CAAO6B,KAAK,UAAUC,UAAW1G,IACjC,kBAAC,IAAD,CAAOyG,KAAK,UAAUC,UAAW3B,IACjC,kBAAC,IAAD,CAAO0B,KAAK,WAAWC,UAAWvB,IAClC,kBAAC,IAAD,CAAOsB,KAAK,WAAWC,UAAWP,QCrBxBQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASjC,MACvB,2D,YClBAkC,EAAY,GAMHC,EAJK,WAAgC,IAA/B7G,EAA8B,uDAAtB4G,EACzB,OAAO5G,GCHL4G,EAAY,CACdxC,MAAO,CACH,CAACvD,GAAI,IAAKoD,MAAO,aAAcgB,YAAa,uBAAyBC,YAAa,MAAOhB,QAAS,eAClG,CAACrD,GAAI,IAAKoD,MAAO,aAAcgB,YAAa,uBAAyBC,YAAa,MAAOhB,QAAS,eAClG,CAACrD,GAAI,IAAKoD,MAAO,aAAcgB,YAAa,sBAAwBC,YAAa,MAAOhB,QAAS,eACjG,CAACrD,GAAI,IAAKoD,MAAO,eAAgBgB,YAAa,SAAUC,YAAa,MAAOhB,QAAS,cAmB9E4C,EAfK,WAAgC,IAA/B9G,EAA8B,uDAAtB4G,EAAWG,EAAW,uCAC/C,OAAQA,EAAOjD,MACX,IAAK,cAED,OADA7C,QAAQC,IAAI,iBACLlB,EAEX,IAAK,mBAED,OADAiB,QAAQC,IAAI,yBAA0B6F,EAAOhB,WACtC/F,EAEX,QACI,OAAOA,I,QCJJgH,EAPKC,YAAgB,CAChC9H,SAAU+H,kBACVnH,UAAWoH,mBACXC,UAAWP,EACXrC,UAAWsC,ICGTtE,EAAQ6E,YAAYL,EADL,IAGfM,EAAW,CACfnI,aACAoI,OAAQC,EACRpC,SAAU5C,EAAM4C,SAChBqC,mDAGFC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUpF,MAAOA,GACf,kBAAC,6BAA+B8E,EAC9B,kBAAC,EAAD,SAINO,SAASC,eAAe,SJkGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzH,MAAK,SAAA0H,GACJA,EAAaC,gBAEdtC,OAAM,SAAAC,GACL7E,QAAQ6E,MAAMA,EAAM7D,c","file":"static/js/main.45920e83.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\n\r\nconst rrfConfig = {\r\n  userProfile: 'users',\r\n  useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\r\n}\r\n\r\nvar fbCconfig = {\r\n    apiKey: \"AIzaSyA8CE6cmO3e84VpfChKyM44KDe28bn5OMk\",\r\n    authDomain: \"parangelmata.firebaseapp.com\",\r\n    databaseURL: \"https://parangelmata.firebaseio.com\",\r\n    projectId: \"parangelmata\",\r\n    storageBucket: \"parangelmata.appspot.com\",\r\n    messagingSenderId: \"824823048409\",\r\n    appId: \"1:824823048409:web:b667f9d23208d7003576c8\",\r\n    measurementId: \"G-9JB6YF1SYF\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(fbCconfig);\r\n  \r\n  export default firebase;","import React, { Component } from 'react'\r\nimport { useFirebase } from \"react-redux-firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\nimport '../../config/fbConfig'\r\nimport {useAuthState} from 'react-firebase-hooks/auth'\r\nimport {useCollectionData} from 'react-firebase-hooks/firestore'\r\n\r\n\r\nconst auth = firebase.auth();\r\nconst firestore = firebase.firestore();\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    // firebase = useFirebase();\r\n    // history = useHistory();\r\n\r\n    signInWithGoogle = () => {\r\n        debugger;\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n        this.props.auth.signInWithPopup(provider).then(()=>{\r\n            debugger;\r\n        })\r\n    }\r\n\r\n    handleChange = (e) =>\r\n    {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) =>\r\n    {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n        this.signInWithGoogle();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <button onClick={this.signInWithGoogle} className=\"btn pink lighten-1 z-depth-0\">Sign In</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignIn\r\n","import React, { Component } from 'react'\r\nimport { useFirebase } from \"react-redux-firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\nimport '../../config/fbConfig'\r\nimport {useAuthState} from 'react-firebase-hooks/auth'\r\nimport {useCollectionData} from 'react-firebase-hooks/firestore'\r\n\r\n\r\nconst auth = firebase.auth();\r\nconst firestore = firebase.firestore();\r\n\r\nclass SignOut extends Component {\r\n\r\n    // firebase = useFirebase();\r\n    // history = useHistory();\r\n\r\n    signOutWithGoogle = () => {\r\n        this.props.auth.signOut();\r\n    }\r\n\r\n    handleChange = (e) =>\r\n    {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) =>\r\n    {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n        this.signInWithGoogle();\r\n    }\r\n\r\n    render() {\r\n        return this.props.auth.currentUser && (\r\n            <div className=\"container\">\r\n                <button onClick={this.signOutWithGoogle} className=\"btn pink lighten-1 z-depth-0\">Sign Out</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignOut\r\n","import React from 'react'\r\nimport {Link, NavLink} from 'react-router-dom'\r\nimport SignOut from '../Auth/SignOut'\r\n\r\nconst SignedInLinks = (props) =>\r\n{\r\n    debugger;\r\n    return(\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/newfarm'>New Farm</NavLink></li>\r\n            <li><NavLink to='/newcamp'>New Camp</NavLink></li>\r\n            <li><NavLink to='/newanimal'>New Animal</NavLink></li>\r\n            <li><SignOut auth={props.auth}/></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedInLinks","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport SignIn from '../Auth/SignIn'\r\nimport SignedInLinks from './SignedInLinks'\r\n\r\n\r\nimport {useAuthState} from 'react-firebase-hooks/auth'\r\n\r\n\r\nconst Navbar = (props) =>\r\n{\r\n    const [user] = useAuthState(props.auth);\r\n    return(\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                {/* <Link to=\"/\" className=\"brand-logo\">ANNML.Farm</Link> */}\r\n                {user ? <SignedInLinks auth={props.auth}/> : <SignIn auth={props.auth} />}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React, {useState}  from 'react';\r\n\r\n\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\nimport {useAuthState} from 'react-firebase-hooks/auth'\r\nimport {useCollectionData} from 'react-firebase-hooks/firestore'\r\n\r\nconst Notifications = (props) =>\r\n{\r\n    const notificationRef = props.store.collection('notifications');\r\n    const query = notificationRef.limit(25);\r\n    const [notifications] = useCollectionData(query, {idField:'id'});\r\n\r\n    const [formValue, setFormValue] = useState('')\r\n\r\n    const sendNotification = async(e) => {\r\n        debugger;\r\n        e.preventDefault();\r\n        const {uid,photoURL}= props.auth.currentUser;\r\n        await notificationRef.add({\r\n            notificationMessage: formValue,\r\n            SentAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n            uid,photoURL\r\n        })\r\n    }\r\n\r\n    const formHandler = (e) =>\r\n    {\r\n        setFormValue(e.target.value);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div>\r\n                {notifications && notifications.map(msg => <Notification key={msg.id} message={msg}  />)}\r\n            </div>\r\n            <form onSubmit={sendNotification}>\r\n                <input onChange={formHandler}/>\r\n                <button type=\"submit\" >Create</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Notification = (props) =>\r\n{\r\n    const {notificationMessage, sentat, uid, photourl} = props.message;\r\n    const messageClass = uid; \r\n    return(\r\n        <div>\r\n            <p>{notificationMessage}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React from 'react';\r\n\r\nconst FarmSummary = ({farm}) => {\r\n    return(\r\n        <div className=\"card z-depth-0 farm-list-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n            <span className=\"card-title\">\r\n                {farm.title}\r\n            </span>\r\n            <p>Owned by {farm.company}</p>\r\n            <p className=\"grey-text\">24 September, 3pm</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FarmSummary","import React from 'react';\r\nimport FarmSummary from './FarmSummary'\r\n\r\nconst FarmList = ({farms}) => {\r\n    return(\r\n        <div className=\"farm-list section\">\r\n            {farms && farms.map(farm => {\r\n                return(\r\n                    <FarmSummary farm={farm} key={farm.id} />\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FarmList","import React, {Component} from 'react'\r\nimport Notifications  from \"./Notifications\";\r\nimport FarmList from '../Farm/FarmList'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\nimport '../../config/fbConfig'\r\nimport {useAuthState} from 'react-firebase-hooks/auth'\r\nimport {useCollectionData} from 'react-firebase-hooks/firestore'\r\n\r\n\r\n\r\nclass Dashboard extends Component{\r\n    render(){\r\n        debugger;\r\n        return(\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <FarmList farms={this.props.userfarms}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications store={this.props.store} auth={this.props.auth}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userfarms: state.farmRedux.farms\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Dashboard)","import React from 'react'\r\n\r\nexport const FarmDetails = (props) => {\r\n    console.log(props);\r\n    console.log(props.match.params.id);\r\n    return (\r\n        <div className=\"container section farm-details\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Farm {props.match.params.id}</span>\r\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum</p>\r\n                </div>\r\n                <div className=\"card-action grey lighten-4 grey-text\">\r\n                    <div>Owned by $owner</div>\r\n                    <div>24 Sept, 5pm</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FarmDetails","import React, { Component } from 'react'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstname: '',\r\n        lastname: ''\r\n    }\r\n\r\n    handleChange = (e) =>\r\n    {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) =>\r\n    {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstname\">First Name</label>\r\n                        <input type=\"text\" id=\"firstname\" onChange={this.handleChange}/>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastname\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastname\" onChange={this.handleChange}/>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignUp\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {createFarm} from '../../Store/Actions/FarmActions'\r\n\r\nclass NewFarm extends Component {\r\n    state = {\r\n        title: '',\r\n        description: '',\r\n        geolocation: '',\r\n        company: ''\r\n    }\r\n\r\n    handleChange = (e) =>\r\n    {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) =>\r\n    {\r\n        e.preventDefault();\r\n        this.props.createFarm(this.state)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">New Farm</h5>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"description\">Description</label>\r\n                        <textarea  className=\"materialize-textarea\" id=\"description\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"geolocation\">Geolocation</label>\r\n                        <input type=\"text\" id=\"geolocation\" onChange={this.handleChange}/>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"company\">Company</label>\r\n                        <input type=\"text\" id=\"company\" onChange={this.handleChange}/>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createFarm: (farm) => dispatch(createFarm(farm))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(NewFarm)\r\n","import { compose } from \"redux\"\r\n\r\nexport const createFarm = (farm) => {\r\n    return (dispatch, getState, {firebase, getFirestore}) => {\r\n        // make async call\r\n        const fireStore = firebase.fireStore;\r\n        debugger;\r\n        fireStore.collection('farms').add({\r\n            ...farm,\r\n            farmFounderFirstName: 'Jean',\r\n            farmFounderLastName: 'Louw',\r\n            farmFoundedOn: new Date()\r\n        }).then(()=>{\r\n            dispatch({\r\n                type: 'CREATE_FARM',\r\n                farmData: farm\r\n            });\r\n        }).catch((error)=>{\r\n            dispatch({\r\n                type: 'CREATE_FARM_ERROR',\r\n                errorData: error\r\n            });\r\n        });\r\n\r\n        \r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nclass NewCamp extends Component {\r\n    state = {\r\n        identifier: '',\r\n        animaltype: '',\r\n        additional: '',\r\n        farm: ''\r\n    }\r\n\r\n    handleChange = (e) =>\r\n    {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) =>\r\n    {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">New Camp</h5>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"identifier\">Identifier</label>\r\n                        <input type=\"text\" id=\"identifier\" onChange={this.handleChange}/>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"animaltype\">Animal Type</label>\r\n                        <input type=\"text\" id=\"animaltype\" onChange={this.handleChange}/>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"additional\">Additional</label>\r\n                        <textarea  className=\"materialize-textarea\" id=\"additional\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"farm\">Farm</label>\r\n                        <input type=\"text\" id=\"farm\" onChange={this.handleChange}/>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewCamp\r\n","import React from 'react';\nimport {BrowserReact, BrowserRouter, Route, Switch} from 'react-router-dom'\nimport Navbar from './Components/Layout/Navbar'\nimport Dashboard from './Components/Dashboard/Dashboard' \nimport FarmDetails from './Components/Farm/FarmDetails'\nimport SignIn from './Components/Auth/SignIn'\nimport SignUp from './Components/Auth/SignUp';\nimport NewFarm from './Components/Farm/NewFarm';\nimport NewCamp from './Components/Camp/NewCamp';\n\nimport firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport './config/fbConfig'\nimport {useAuthState} from 'react-firebase-hooks/auth'\nimport {useCollectionData} from 'react-firebase-hooks/firestore'\n\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nfunction App() {\n  debugger;\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar auth={auth}/>\n        <Switch>\n          <Route exact path='/'><Dashboard  auth={auth} store={firestore} /></Route>\n          <Route path='/farm/:id' component={FarmDetails} />\n          <Route path='/signin' component={SignIn} />\n          <Route path='/signup' component={SignUp} />\n          <Route path='/newfarm' component={NewFarm} />\n          <Route path='/newcamp' component={NewCamp} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    return state\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n    farms: [\r\n        {id: '1', title: 'Sunny Farm', description: 'It\\'s too damn sunny!', geolocation: '0,0', company: 'Solar Farms'},\r\n        {id: '2', title: 'Shady Farm', description: 'It\\'s too damn shady!', geolocation: '1,1', company: 'Solar Farms'},\r\n        {id: '3', title: 'Money Farm', description: 'It\\'s too damn rich!', geolocation: '2,2', company: 'Solar Farms'},\r\n        {id: '4', title: 'Jacques Farm', description: 'Yo yo!', geolocation: '2,2', company: 'Jamesons'},\r\n    ]\r\n}\r\n\r\nconst farmReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_FARM':\r\n            console.log('Created farm:');\r\n            return state\r\n            \r\n        case 'CREATE_FARMERROR':\r\n            console.log('Created project error:', action.errorData);\r\n            return state\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default farmReducer","import authReducer from './AuthReducer'\r\nimport farmReducer from './FarmReducer'\r\nimport {combineReducers} from 'redux'\r\nimport 'firebase/firestore'\r\nimport {\r\n  firebaseReducer\r\n} from 'react-redux-firebase'\r\nimport {firestoreReducer } from 'redux-firestore'\r\n\r\nconst rootReducer = combineReducers({\r\n    firebase: firebaseReducer,\r\n    firestore: firestoreReducer, // <- needed if using firestore\r\n    authRedux: authReducer,\r\n    farmRedux: farmReducer\r\n})\r\n\r\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, combineReducers, compose } from 'redux'\nimport {Provider} from 'react-redux'\nimport firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport fbConfig from './config/fbConfig'\nimport rootReducer from './Store/Reducers/RootReducer'\nimport { createFirestoreInstance } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase'\n\nconst initialState = {}\nconst store = createStore(rootReducer, initialState)\n\nconst rrfProps = {\n  firebase,\n  config: fbConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance // <- needed if using firestore\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <App />\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}